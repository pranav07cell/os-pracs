#include <stdio.h>

void worstFit(int blockSize[], int m, int processSize[], int n);


int main() {
    int blockSize[] = {100, 500, 200, 300, 600};
    int processSize[] = {212, 417, 112, 426};
    int m = sizeof(blockSize) / sizeof(blockSize[0]);
    int n = sizeof(processSize) / sizeof(processSize[0]);


    printf("\nWorst Fit Allocation:\n");
    worstFit(blockSize, m, processSize, n);

    return 0;
}



void worstFit(int blockSize[], int m, int processSize[], int n) {
    int allocation[n];
    int temp[m];
    int i, j;

    for (i = 0; i < m; i++)
        temp[i] = blockSize[i];

    for (i = 0; i < n; i++) {
        allocation[i] = -1;
        int worstIdx = -1;
        for (j = 0; j < m; j++) {
            if (temp[j] >= processSize[i]) {
                if (worstIdx == -1 || temp[j] > temp[worstIdx])
                    worstIdx = j;
            }
        }

        if (worstIdx != -1) {
            allocation[i] = worstIdx;
            temp[worstIdx] -= processSize[i];
        }
    }

    for (i = 0; i < n; i++) {
        printf("Process %d -> ", i + 1);
        if (allocation[i] != -1)
            printf("Block %d\n", allocation[i] + 1);
        else
            printf("Not Allocated\n");
    }
}
